const { SlashCommandBuilder, EmbedBuilder, PermissionsBitField } = require('discord.js');
const db = require('quick.db');
const id = require('../Settings/idler.json');
const ayar = require('../Settings/config.json');

module.exports = {
Â  Â  // Slash komutu verisi
Â  Â  data: new SlashCommandBuilder()
Â  Â  Â  Â  .setName('vmute')
Â  Â  Â  Â  .setDescription('Bir kullanÄ±cÄ±yÄ± ses kanallarÄ±nda kalÄ±cÄ± olarak susturur.')
Â  Â  Â  Â  .addUserOption(option =>
Â  Â  Â  Â  Â  Â  option.setName('kullanÄ±cÄ±')
Â  Â  Â  Â  Â  Â  Â  Â  .setDescription('Susturulacak kullanÄ±cÄ±.')
Â  Â  Â  Â  Â  Â  Â  Â  .setRequired(true))
Â  Â  Â  Â  .addStringOption(option =>
Â  Â  Â  Â  Â  Â  option.setName('sebep')
Â  Â  Â  Â  Â  Â  Â  Â  .setDescription('Susturma sebebi.')
Â  Â  Â  Â  Â  Â  Â  Â  .setRequired(true)),
Â  Â  
Â  Â  // Prefix komut bilgisi
Â  Â  name: 'vmute',
Â  Â  aliases: ['seslisustur'],

Â  Â  async execute(interactionOrMessage, args) {
Â  Â  Â  Â  const isSlash = interactionOrMessage.isCommand?.();
Â  Â  Â  Â  const author = isSlash ? interactionOrMessage.user : interactionOrMessage.author;
Â  Â  Â  Â  const guild = interactionOrMessage.guild;

Â  Â  Â  Â  let targetMember, reason;
Â  Â  Â  Â  if (isSlash) {
Â  Â  Â  Â  Â  Â  targetMember = interactionOrMessage.options.getMember('kullanÄ±cÄ±');
Â  Â  Â  Â  Â  Â  reason = interactionOrMessage.options.getString('sebep');
Â  Â  Â  Â  } else {
Â  Â  Â  Â  Â  Â  targetMember = interactionOrMessage.mentions.members.first() || guild.members.cache.get(args[0]);
Â  Â  Â  Â  Â  Â  reason = args.slice(1).join(' ');
Â  Â  Â  Â  }

Â  Â  Â  Â  // Yetki kontrolÃ¼ (hem rol hem de sunucu izni)
Â  Â  Â  Â  const muteYetkilisiRole = id.Mute.muteyetkiliid;
Â  Â  Â  Â  if (!interactionOrMessage.member.roles.cache.has(muteYetkilisiRole) && !interactionOrMessage.member.permissions.has(PermissionsBitField.Flags.MuteMembers) && author.id !== ayar.sahip) {
Â  Â  Â  Â  Â  Â  const replyMessage = '`Bu komutu kullanmak iÃ§in gerekli izinlere sahip deÄŸilsin!`';
Â  Â  Â  Â  Â  Â  return isSlash 
Â  Â  Â  Â  Â  Â  Â  Â  ? interactionOrMessage.reply({ content: replyMessage, ephemeral: true })
Â  Â  Â  Â  Â  Â  Â  Â  : interactionOrMessage.reply(replyMessage).then(x => setTimeout(() => x.delete(), 3000));
Â  Â  Â  Â  }
Â  Â  Â  Â  
Â  Â  Â  Â  // ArgÃ¼man ve kullanÄ±cÄ± kontrolleri
Â  Â  Â  Â  if (!targetMember || !reason) {
Â  Â  Â  Â  Â  Â  const replyMessage = '`Ses kanallarÄ±nda susturmak iÃ§in Ã¼ye ve sebep belirtmelisin!`';
Â  Â  Â  Â  Â  Â  return isSlash 
Â  Â  Â  Â  Â  Â  Â  Â  ? interactionOrMessage.reply({ content: replyMessage, ephemeral: true })
Â  Â  Â  Â  Â  Â  Â  Â  : interactionOrMessage.reply(replyMessage).then(x => setTimeout(() => x.delete(), 3000));
Â  Â  Â  Â  }
Â  Â  Â  Â  
Â  Â  Â  Â  if (!targetMember.voice.channel) {
Â  Â  Â  Â  Â  Â  const replyMessage = '`Ãœye ses kanalÄ±nda bulunmamaktadÄ±r!`';
Â  Â  Â  Â  Â  Â  return isSlash 
Â  Â  Â  Â  Â  Â  Â  Â  ? interactionOrMessage.reply({ content: replyMessage, ephemeral: true })
Â  Â  Â  Â  Â  Â  Â  Â  : interactionOrMessage.reply(replyMessage).then(x => setTimeout(() => x.delete(), 3000));
Â  Â  Â  Â  }
Â  Â  Â  Â  
Â  Â  Â  Â  if (targetMember.voice.mute) {
Â  Â  Â  Â  Â  Â  const replyMessage = '`Etiketlenen kullanÄ±cÄ± zaten ses kanallarÄ±nda susturulmuÅŸ!`';
Â  Â  Â  Â  Â  Â  return isSlash 
Â  Â  Â  Â  Â  Â  Â  Â  ? interactionOrMessage.reply({ content: replyMessage, ephemeral: true })
Â  Â  Â  Â  Â  Â  Â  Â  : interactionOrMessage.reply(replyMessage).then(x => setTimeout(() => x.delete(), 3000));
Â  Â  Â  Â  }

Â  Â  Â  Â  if (interactionOrMessage.member.roles.highest.position <= targetMember.roles.highest.position) {
Â  Â  Â  Â  Â  Â  const replyMessage = '`EtiketlediÄŸin kullanÄ±cÄ± senden Ã¼st veya senle aynÄ± pozisyonda!`';
Â  Â  Â  Â  Â  Â  return isSlash 
Â  Â  Â  Â  Â  Â  Â  Â  ? interactionOrMessage.reply({ content: replyMessage, ephemeral: true })
Â  Â  Â  Â  Â  Â  Â  Â  : interactionOrMessage.reply(replyMessage).then(x => setTimeout(() => x.delete(), 3000));
Â  Â  Â  Â  }
Â  Â  Â  Â  
Â  Â  Â  Â  try {
Â  Â  Â  Â  Â  Â  await targetMember.voice.setMute(true, reason);
Â  Â  Â  Â  Â  Â  
Â  Â  Â  Â  Â  Â  // VeritabanÄ± iÅŸlemleri
Â  Â  Â  Â  Â  Â  await db.push(`Ã¼ye.${targetMember.id}.sicil`, {
Â  Â  Â  Â  Â  Â  Â  Â  Yetkili: author.id,
Â  Â  Â  Â  Â  Â  Â  Â  Tip: "VOICE MUTE",
Â  Â  Â  Â  Â  Â  Â  Â  Sebep: reason,
Â  Â  Â  Â  Â  Â  Â  Â  Zaman: Date.now()
Â  Â  Â  Â  Â  Â  });
Â  Â  Â  Â  Â  Â  
Â  Â  Â  Â  Â  Â  const successEmbed = new EmbedBuilder()
Â  Â  Â  Â  Â  Â  Â  Â  .setColor('#00FF00')
Â  Â  Â  Â  Â  Â  Â  Â  .setTitle('Ses Susturma BaÅŸarÄ±lÄ±')
Â  Â  Â  Â  Â  Â  Â  Â  .setDescription(`${targetMember} adlÄ± Ã¼ye baÅŸarÄ±yla ses kanallarÄ±nda susturuldu.`)
Â  Â  Â  Â  Â  Â  Â  Â  .addFields(
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  { name: 'Sebep', value: `\`${reason}\``, inline: true }
Â  Â  Â  Â  Â  Â  Â  Â  )
Â  Â  Â  Â  Â  Â  Â  Â  .setTimestamp();

Â  Â  Â  Â  Â  Â  isSlash
Â  Â  Â  Â  Â  Â  Â  Â  ? await interactionOrMessage.reply({ embeds: [successEmbed] })
Â  Â  Â  Â  Â  Â  Â  Â  : await interactionOrMessage.reply({ embeds: [successEmbed] }).then(x => setTimeout(() => x.delete(), 9000));
Â  Â  Â  Â  Â  Â  
Â  Â  Â  Â  Â  Â  await interactionOrMessage.react('ðŸ”‡');

Â  Â  Â  Â  Â  Â  // Log kanalÄ±na gÃ¶nderim
Â  Â  Â  Â  Â  Â  const muteLogChannel = guild.channels.cache.get(id.Mute.mutelogkanalid);
Â  Â  Â  Â  Â  Â  if (muteLogChannel) {
Â  Â  Â  Â  Â  Â  Â  Â  const logEmbed = new EmbedBuilder()
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  .setColor('#97ffff')
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  .setTitle('Ses Susturma')
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  .setDescription(`
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  **KullanÄ±cÄ±:** ${targetMember} (\`${targetMember.id}\`)
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  **Yetkili:** ${author} (\`${author.id}\`)
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  **Sebep:** \`${reason}\`
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  `)
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  .setTimestamp();
Â  Â  Â  Â  Â  Â  Â  Â  muteLogChannel.send({ embeds: [logEmbed] });
Â  Â  Â  Â  Â  Â  }
Â  Â  Â  Â  } catch (error) {
Â  Â  Â  Â  Â  Â  console.error('vmute komutu hatasÄ±:', error);
Â  Â  Â  Â  Â  Â  const errorMessage = '`KullanÄ±cÄ± ses kanalÄ±nda susturulurken bir hata oluÅŸtu.`';
Â  Â  Â  Â  Â  Â  isSlash
Â  Â  Â  Â  Â  Â  Â  Â  ? await interactionOrMessage.reply({ content: errorMessage, ephemeral: true })
Â  Â  Â  Â  Â  Â  Â  Â  : await interactionOrMessage.reply(errorMessage).then(x => setTimeout(() => x.delete(), 3000));
Â  Â  Â  Â  }
Â  Â  }
};
