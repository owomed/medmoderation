const { SlashCommandBuilder, EmbedBuilder, PermissionsBitField, ChannelType } = require('discord.js');
const id = require('../Settings/idler.json');
const ayar = require('../Settings/config.json');

module.exports = {
Â  Â  // Slash komutu verisi
Â  Â  data: new SlashCommandBuilder()
Â  Â  Â  Â  .setName('nerede')
Â  Â  Â  Â  .setDescription('Etiketlenen Ã¼yenin ses kanalÄ±ndaki durumunu gÃ¶sterir.')
Â  Â  Â  Â  .addUserOption(option =>
Â  Â  Â  Â  Â  Â  option.setName('kullanÄ±cÄ±')
Â  Â  Â  Â  Â  Â  Â  Â  .setDescription('Ses durumuna bakÄ±lacak kullanÄ±cÄ±.')
Â  Â  Â  Â  Â  Â  Â  Â  .setRequired(true)),

Â  Â  // Prefix komut bilgisi
Â  Â  name: 'nerede',
Â  Â  aliases: ['ses-bilgi', 'sesbilgi', 'ses-durum', 'sesdurum'],

Â  Â  async execute(interactionOrMessage) {
Â  Â  Â  Â  let member, author, guild, isSlash;

Â  Â  Â  Â  if (interactionOrMessage.isCommand?.()) {
Â  Â  Â  Â  Â  Â  isSlash = true;
Â  Â  Â  Â  Â  Â  author = interactionOrMessage.user;
Â  Â  Â  Â  Â  Â  guild = interactionOrMessage.guild;
Â  Â  Â  Â  Â  Â  member = interactionOrMessage.options.getMember('kullanÄ±cÄ±');
Â  Â  Â  Â  } else {
Â  Â  Â  Â  Â  Â  isSlash = false;
Â  Â  Â  Â  Â  Â  author = interactionOrMessage.author;
Â  Â  Â  Â  Â  Â  guild = interactionOrMessage.guild;
Â  Â  Â  Â  Â  Â  const args = interactionOrMessage.content.slice(1).trim().split(/ +/);
Â  Â  Â  Â  Â  Â  member = interactionOrMessage.mentions.members.first() || interactionOrMessage.guild.members.cache.get(args[1]);
Â  Â  Â  Â  }
Â  Â  Â  Â  
Â  Â  Â  Â  const yetkiliRolleri = id.Roles.roleyetkiliid; // Ayarlar dosyasÄ±ndaki rol ID'sini buraya ekle
Â  Â  Â  Â  const requesterMember = await guild.members.fetch(author.id);

Â  Â  Â  Â  // Yetki kontrolÃ¼ (Sadece Rol ve Sahip)
Â  Â  Â  Â  if (!requesterMember.roles.cache.some(r => yetkiliRolleri.includes(r.id)) && author.id !== ayar.sahip) {
Â  Â  Â  Â  Â  Â  const replyMessage = '`Bu komudu kullanmak iÃ§in gerekli yetkili role sahip deÄŸilsin!`';
Â  Â  Â  Â  Â  Â  return isSlash 
Â  Â  Â  Â  Â  Â  Â  Â  ? interactionOrMessage.reply({ content: replyMessage, ephemeral: true })
Â  Â  Â  Â  Â  Â  Â  Â  : interactionOrMessage.reply(replyMessage).then(x => setTimeout(() => x.delete(), 3000));
Â  Â  Â  Â  }

Â  Â  Â  Â  // Ãœye kontrolÃ¼
Â  Â  Â  Â  if (!member) {
Â  Â  Â  Â  Â  Â  const replyMessage = '`Ses durumuna bakmak istediÄŸiniz Ã¼yeyi belirtiniz!`';
Â  Â  Â  Â  Â  Â  return isSlash
Â  Â  Â  Â  Â  Â  Â  Â  ? interactionOrMessage.reply({ content: replyMessage, ephemeral: true })
Â  Â  Â  Â  Â  Â  Â  Â  : interactionOrMessage.reply(replyMessage).then(x => setTimeout(() => x.delete(), 3000));
Â  Â  Â  Â  }

Â  Â  Â  Â  // Ses kanalÄ± kontrolÃ¼
Â  Â  Â  Â  if (!member.voice.channel) {
Â  Â  Â  Â  Â  Â  const replyMessage = '`Ãœye ses kanalÄ±nda bulunmamaktadÄ±r!`';
Â  Â  Â  Â  Â  Â  return isSlash
Â  Â  Â  Â  Â  Â  Â  Â  ? interactionOrMessage.reply({ content: replyMessage, ephemeral: true })
Â  Â  Â  Â  Â  Â  Â  Â  : interactionOrMessage.reply(replyMessage).then(x => setTimeout(() => x.delete(), 3000));
Â  Â  Â  Â  }

Â  Â  Â  Â  // DurumlarÄ± kontrol et
Â  Â  Â  Â  const micStatus = member.voice.selfMute ? "KapalÄ± ðŸ”‡" : "AÃ§Ä±k ðŸŽ¤";
Â  Â  Â  Â  const deafStatus = member.voice.selfDeaf ? "KapalÄ± ðŸŽ§" : "AÃ§Ä±k ðŸ‘‚";
Â  Â  Â  Â  const streamStatus = member.voice.streaming ? "AÃ§Ä±k ðŸ”´" : "KapalÄ± ðŸŸ¢";

Â  Â  Â  Â  const replyMessage = `\`Etiketlenen Ã¼ye ${member.voice.channel.name} adlÄ± ses kanalÄ±nda. KullanÄ±cÄ±nÄ±n mikrofon durumu (${micStatus}), kulaklÄ±k durumu (${deafStatus}) ve yayÄ±n durumu (${streamStatus}) ÅŸeklindedir.\``;

Â  Â  Â  Â  isSlash
Â  Â  Â  Â  Â  Â  ? await interactionOrMessage.reply({ content: replyMessage })
Â  Â  Â  Â  Â  Â  : await interactionOrMessage.reply(replyMessage).then(x => setTimeout(() => x.delete(), 7000));
Â  Â  }
};
